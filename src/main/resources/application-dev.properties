# ================================
# CONFIGURACI√ìN DE DESARROLLO
# ================================

# ================================
# DATABASE CONFIGURATION - DESDE .env
# ================================
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/urdimbre}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:}

# ================================
# JPA/HIBERNATE - DESARROLLO
# ================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# ================================
# JWT CONFIGURATION - DESDE .env CON FALLBACK DE DESARROLLO
# ================================
jwt.secret=${JWT_SECRET_KEY:dev-secret-key-not-for-production-use-only-for-development-testing-minimum-64-chars}
jwt.access-token-expiration=${JWT_ACCESS_EXPIRATION:86400000}
jwt.refresh-token-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# ================================
# ADMIN CONFIG - DESDE .env CON FALLBACK DE DESARROLLO
# ================================
admin.username=${ADMIN_USERNAME:admin}
admin.email=${ADMIN_EMAIL:admin@localhost.dev}
admin.password=${ADMIN_PASSWORD:DevPassword123!}

# ================================
# SERVER CONFIGURATION
# ================================
server.port=${SERVER_PORT:8080}

# ================================
# LOGGING PARA DESARROLLO (VERBOSE)
# ================================
logging.level.org.springframework.security=DEBUG
logging.level.com.urdimbre=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation=DEBUG
logging.level.org.springframework.web.servlet.handler=DEBUG
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=DEBUG
logging.level.org.springframework.web.servlet=DEBUG

# LOGGING ESPEC√çFICO PARA RATE LIMITING
logging.level.com.urdimbre.urdimbre.security.service.RateLimitingService=INFO

# ================================
# ACTUATOR PARA MONITOREO EN DESARROLLO
# ================================
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=always

# ================================
# RATE LIMITING - PERMISIVO PARA DESARROLLO
# ================================

# üìù REGISTRO RATE LIMITING - PERMISIVO
rate-limit.register.ip.capacity=${RATE_LIMIT_REGISTER_IP_CAPACITY:100}
rate-limit.register.ip.refill-tokens=${RATE_LIMIT_REGISTER_IP_REFILL:10}
rate-limit.register.ip.refill-duration=${RATE_LIMIT_REGISTER_IP_DURATION:PT30S}

# üîë LOGIN RATE LIMITING - PERMISIVO
rate-limit.login.ip.capacity=${RATE_LIMIT_LOGIN_IP_CAPACITY:100}
rate-limit.login.ip.refill-tokens=${RATE_LIMIT_LOGIN_IP_REFILL:20}
rate-limit.login.ip.refill-duration=${RATE_LIMIT_LOGIN_IP_DURATION:PT30S}

# üë§ LOGIN POR USUARIO - PERMISIVO
rate-limit.login.user.capacity=${RATE_LIMIT_LOGIN_USER_CAPACITY:50}
rate-limit.login.user.refill-tokens=${RATE_LIMIT_LOGIN_USER_REFILL:10}
rate-limit.login.user.refill-duration=${RATE_LIMIT_LOGIN_USER_DURATION:PT30S}

# ================================
# CACHE PARA DESARROLLO
# ================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterAccess=300s

# ================================
# LIMPIEZA FRECUENTE PARA DESARROLLO
# ================================
rate-limit.cleanup.enabled=true
rate-limit.cleanup.interval=${RATE_LIMIT_CLEANUP_INTERVAL:60000}

blacklist.cleanup.interval=${BLACKLIST_CLEANUP_INTERVAL:120000}

token.cleanup.enabled=true
token.cleanup.interval=${TOKEN_CLEANUP_INTERVAL:300000}


# ================================
# C√ìDIGOS DE INVITACI√ìN - DESARROLLO
# ================================
invite.code.default=${INVITE_CODE_DEFAULT:URDIMBRE2025}